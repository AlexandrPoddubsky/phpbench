<?php

namespace PhpBench;

gc_disable();
$class = '{{ class }}';
$file = '{{ file }}';
$subject = '{{ subject }}';
$revolutions = {{ revolutions }};
$beforeMethods = {{ beforeMethods }};
$bootstrap = '{{ bootstrap }}';

if ($bootstrap) {
    require_once($bootstrap);
}

if (false === interface_exists('PhpBench\BenchmarkInterface')) {
    interface BenchmarkInterface {}
}

require_once($file);

$benchmark = new $class();

foreach ($beforeMethods as $beforeMethod) {
    $benchmark->$beforeMethod();
}

$startMemory = memory_get_usage();
$startTime = microtime(true);

for ($i = 0; $i < $revolutions; $i++) {
    $benchmark->$subject(null, $i);
}

$endTime = microtime(true);
$endMemory = memory_get_usage();

echo json_encode(array(
    'memory' => $endMemory - $startMemory,
    'time' => ($endTime * 1000000) - ($startTime * 1000000),
));
exit(0);
