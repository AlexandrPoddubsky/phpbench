<?php

require_once(__DIR__ . '/../vendor/autoload.php');

$report1 = new SqliteReport();
$report1->setTitle('Cost of Setting');
$report1->setDescription('Displays stuff like this');
$report1->addNamedQuery('SELECT description, time FROM suite WHERE group = "cost_of_setting" ORDER BY time');
$report1->addNamedQuery('SELECT param_foo AS foo, description, time FROM suite WHERE group_cost_of_setting IS NOT NULL ORDER BY time');
$report1->setOutput(array(
    'html' => new GoogleGraphFormatter(),
    'console' => null,
));

$report2 = new SqliteReport();
$report2->setTitle('Cost of Setting');
$report2->setDescription('Displays stuff like this');
$report2->addQuery('SELECT description, time FROM suite WHERE group = "cost_of_setting" ORDER BY time', 'Query one');
$report2->addQuery('SELECT param_foo AS foo, description, time FROM suite WHERE group_cost_of_setting IS NOT NULL ORDER BY time', 'Query two');
$report2->setOutput(array(
    'html' => new HtmlTableFormatter(),
    'console' => new ConsoleTableFormatter(),
));

$composite = new CompositeReport();
$composite->setTitle('PHPBench Example');
$composite->setDescription('Comparison of PHP internal functions');
$composite->add($report);

$config = PhpBench\Configuration::create();
$config->addReport('example', $composite, array(
    'console' => array(),
    'html' => array('template' => '/path/to/template', 'outfile' => 'report.html')
));
$config->setPath(__DIR__);

return $config;
