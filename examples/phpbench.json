{
    "bootstrap": "../vendor/autoload.php",
    "path": "./",
    "reports": {
        "cost_of_setting": {
            "extends": "aggregate",
            "title": "Cost of Setting",
            "description": "Comparison of different ways of setting properties",
            "sort": ["time"],
            "params": {"selector": "//subject[group/@name='cost_of_setting']//iterations"}
        },
        "cost_of_instantiation": {
            "extends": "aggregate",
            "title": "Cost of Instantiation",
            "description": "Compares instantiating a class directly against instantiating via. Reflection",
            "sort": ["time"],
            "params": {"selector": "//subject[group/@name='cost_of_instantiation']//iterations"}
        },
        "array_keys": {
            "generator": "console_table",
            "title": "Comparison of array location functions",
            "description": "This benchmark creates an array with 50,000 elements. Each subject checks the existence of the key with the index of the current revolution. (or in the case of in_arrey, for the value). 100 revolutions",
            "rows": [
                {
                    "cells": {
                        "subject": "string(ancestor::subject/@name)",
                        "elements": "string('{{ row.item }}')",
                        "time": "string(php:bench('avg', ./iteration[@revs='{{ row.item }}']/@time))",
                        "iters": "number(count(.//iteration))",
                        "revs": "number(sum(.//iteration/@revs))",
                        "deviation": {
                            "expr": "number(php:bench('deviation', number(php:bench('min', //cell[@name=\"time\"])), number(./cell[@name=\"time\"])))",
                            "post_process": true
                        }
                    },
                    "with_query": "//subject[group/@name='array_keys']//iterations",
                    "with_items": ["10", "100", "1000"]
                }
            ]
        },
        "all": {
            "generator": "composite",
            "reports": ["cost_of_setting", "cost_of_instantiation", "array_keys"]
        }
    }
}
